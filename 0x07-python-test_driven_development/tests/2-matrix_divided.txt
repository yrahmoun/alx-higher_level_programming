The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

importing function:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

normal usage:
	>>> matrix = [[5, 3, 6], [1, 2, 7]]
	>>> print(matrix_divided(matrix, 2))
	[[2.5, 1.5, 3.0], [0.5, 1.0, 3.5]]

	>>> matrix = [[5, 3, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[1.67, 1.0, 2.0]]

	>>> matrix = [[5.6, 3.15, 6.5]]
	>>> print(matrix_divided(matrix, 2))
	[[2.8, 1.57, 3.25]]

	>>> matrix = [[5.6, 3.15, 6.5]]
	>>> print(matrix_divided(matrix, 2.5))
	[[2.24, 1.26, 2.6]]

div is 0:
	>>> matrix = [[5.6, 3.15, 6.5]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

element is not an int or float:
	>>> matrix = [[5.6, 3.15, "test"]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

rows don't have same size:
	>>> matrix = [[5.6, 3.15, 5], [1, 2]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

div not a number:
	>>> matrix = [[5.6, 3.15, 5]]
	>>> print(matrix_divided(matrix, "c"))
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [[5.6, 3.15, 5]]
        >>> print(matrix_divided(matrix, None))
	Traceback (most recent call last):
        TypeError: div must be a number
